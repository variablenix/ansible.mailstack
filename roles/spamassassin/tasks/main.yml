---
- name: Install SpamAssassin and dependencies
  pacman:
    name: "{{ item }}"
    state: present
  with_items:
    - perl-crypt-openssl-bignum
    - perl-crypt-openssl-random
    - perl-crypt-openssl-rsa
    - perl-crypt-ssleay
    - perl-digest-hmac
    - perl-digest-sha1
    - perl-io-socket-inet6
    - perl-io-socket-ssl
    - perl-lwp-protocol-https
    - perl-mail-dkim
    - perl-mail-spf
    - perl-net-dns
    - perl-net-dns-resolver-mock
    - perl-net-ip
    - perl-net-ssleay
    - perl-path-class
    - perl-socket6
    - perl-yaml-libyaml
    - re2c
    - spamassassin
  when: inventory_hostname in groups['smtp']

# Copy spamassassin systemd service files
- name: Copy custom systemd spamassassin files to /etc/systemd/system/
  copy:
    src: "{{ item }}"
    dest: /etc/systemd/system
    mode: 0644
  with_items:
    - systemd/spamassassin.service
    - systemd/spamassassin-update.service
    - systemd/spamassassin-update.timer
  notify: reload systemd
  when: inventory_hostname in groups['smtp']

 # Ensure spamassassin-update.timer is enabled
- name: Enable spamassassin-update.timer
  systemd:
    name: spamassassin-update.timer
    enabled: yes
    masked: no
    state: started
  when: inventory_hostname in groups['smtp']

# Do an initial SpamAssassin rule update and compile them
- name: Run initial SpamAssassin rule update and compile
  command: "{{ item }} chdir={{ spamd_dir }}"
  with_items:
    - "{{ spamd_bin }}/sa-update"
    - "{{ spamd_bin }}/sa-compile"
  when: inventory_hostname in groups['smtp']
  ignore_errors: yes

# Call ClamAV Plugin from SpamAssassin
- name: Ensure plugin dependencies are installed
  pacman:
    name: "{{ item }}"
    state: present
  with_items:
    - perl-archive-extract
    - perl-cpanplus
    - perl-log-message
    - perl-log-message-simple
    - perl-module-pluggable
    - perl-object-accessor
    - perl-package-constants
    - perl-term-ui
    - perl-cpanplus-dist-arch
  when: inventory_hostname in groups['smtp']

- name: Check if the ClamAV perl library is installed
  shell: locate ClamAV.pm >/dev/null
  changed_when: false
  ignore_errors: true
  register: clamavlib_status
  check_mode: no
  when: inventory_hostname in groups['smtp']

- name: Install the ClamAV perl library
  command: "{{ spamd_bin }}/cpanp -i File::Scan::ClamAV"
  when: (inventory_hostname in groups['smtp']) and
        (clamavlib_status.rc not in [0])

- name: Copy ClamAV plugin files to {{ spamd_dir }}/
  copy: src={{ item }} dest={{ spamd_dir }}
  with_items:
    - clamav.cf
    - clamav.pm
  notify: restart spamd
  when: inventory_hostname in groups['smtp']
  tags: [spamdconfig]

- name: Copy local.cf to {{ spamd_dir }}/
  template:
    src: "local.cf.j2"
    dest: "{{ spamd_dir }}/local.cf"
  notify: restart spamd
  tags: [spamdconfig]
  when: inventory_hostname in groups['smtp']

- name: Copy SpamAssassin plugin files to {{ spamd_dir }}/
  copy:
    src: "{{ item }}"
    dest: "{{ spamd_dir }}"
  with_items:
    - init.pre
    - v310.pre
    - v312.pre
    - v320.pre
    - v330.pre
    - v340.pre
    - v341.pre
  tags: [spamdconfig]
  when: inventory_hostname in groups['smtp']

- name: Ensure SpamAssassin whitelist is current
  template:
    src: whitelist.cf.j2
    dest: "{{ spamd_dir }}/whitelist.cf"
    owner: root
    group: root
    mode: 0644
  notify: restart spamd
  tags: [spamd_whitelist]
  when: inventory_hostname in groups['smtp']

- name: Ensure SpamAssassin blacklist is current
  template:
    src: blacklist.cf.j2
    dest: "{{ spamd_dir }}/blacklist.cf"
    owner: root
    group: root
    mode: 0644
  notify: restart spamd
  tags: [spamd_blacklist]
  when: inventory_hostname in groups['smtp']

# Razor
- include: razor.yml
  when: (spamassassin_enable_razor) and
        (inventory_hostname in groups['smtp'])
  tags: [razor]

# Pyzor
- include: pyzor.yml
  when: (spamassassin_enable_pyzor) and
        (inventory_hostname in groups['smtp'])
  tags: [pyzor]

# Bayes SQL
- include: spamassassin_bayes.yml
  tags: [bayes_sql]
  when: (spamassassin_enable_bayes_sql) and
        (inventory_hostname in groups['smtp'])
  ignore_errors: yes

# Ensure SpamAssassin is running
- name: Enable SpamAssassin
  systemd:
    name: spamassassin
    enabled: yes
    masked: no
    state: started
  when: inventory_hostname in groups['smtp']
