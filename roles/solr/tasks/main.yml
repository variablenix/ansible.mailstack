---
- name: Install dependencies
  pacman:
    name: "{{ item }}"
    state: present
  with_items:
    - java-runtime-common
    - lcms2
    - libjpeg-turbo
    - libnet
    - libtiff
    - nspr
    - nss
    - jre10-openjdk-headless
    - apache-ant
  when: inventory_hostname in groups['imap']

# Install GnuPG and import valid Solr signing key for AUR build
- name: Install GnuPG
  pacman:
    name: gnupg
    state: present
  when: inventory_hostname in groups['imap']

- name: Import valid GPG code signing key - Ishan Chattopadhyaya <ishan@apache.org>
  shell: "{{ item }}"
  with_items:
    - gpg --recv-keys --keyserver hkp://pgp.mit.edu BF160FF14992A24C
  when: inventory_hostname in groups['imap']
  changed_when: false

- name: Install Solr indexing server
  aur: name=solr skip_installed=true
  become: yes
  become_user: aur_builder
  when: inventory_hostname in groups['imap']

- name: Copy custom systemd solr.service file with limit options to /etc/systemd/system/
  copy: >
    src=solr.service
    dest=/etc/systemd/system/solr.service
    mode=644
  notify: reload systemd
  when: inventory_hostname in groups['imap']

# Ensure Solr is running
- name: Enable Solr
  systemd:
    name: solr
    enabled: yes
    masked: no
    state: started
  when: inventory_hostname in groups['imap']

# This task only runs if core does not already exist
- name: Create new Solr core for Dovecot
  become: yes
  become_user: solr
  ignore_errors: yes
  command: /bin/bash -c '{{ solrhome }}/bin/solr create_core -c dovecot'
  args:
    chdir: "{{ solrhome }}"
    creates: "{{ solrhome }}/server/solr/dovecot"
  notify: restart solr
  when: inventory_hostname in groups['imap']

- name: Sync Solr configs for Dovecot
  copy:
    src: "{{ item }}"
    dest: "{{ solrhome }}/server/solr/dovecot/conf"
    owner: solr
    group: solr
  with_items:
    - schema.xml
    - solrconfig.xml
  when: inventory_hostname in groups['imap']

# Use grep to determine if managed-schema contains our dovecot string
- name: Check if managed-schema is ready for Dovecot
  shell: grep dovecot "{{ solrhome }}/server/solr/dovecot/conf/managed-schema" | cat
  register: dovecot_out
  check_mode: no
  when: inventory_hostname in groups['imap']

- name: Remove default managed-schema if schema is not Dovecot ready
  file:
    state: absent
    path: "{{ solrhome }}/server/solr/dovecot/conf/managed-schema"
  when: (inventory_hostname in groups['imap']) and
        (dovecot_out.stdout != 'dovecot')
  notify: restart solr

- include: cron.yml
  when: inventory_hostname in groups['imap']
  tags: [solrcron]
